function [group_data,batch] = sort_data_by_group(batch,exclude)
%UNTITLED3 Summary of this function goes here
%   Detailed explanation goes here

% load batch data
data_path = fullfile(batch.path_task_erp,batch.batch_fname);
load( data_path, 'data' )

% get batch information
method = batch.method;
groups = batch.groups.table;
grp_names = fieldnames(batch.groups); grp_names = grp_names(2:end);
n_grps = length(grp_names);
 grp_names = {'TD','ASD'};
 n_grps = 2;
rois   = fieldnames(data);

n_rois = length(rois);
%% compile subject data by group
% iterate through rois
for i_r = 1:n_rois
    roi = rois{i_r};
    erps = fieldnames(data.(roi));
    n_erps = length(erps);
    % iterate through erp components
    for i_c = 1:n_erps
        erp = erps{i_c};
        erp_data = data.(roi).(erp);

        % iterate through subjects
        subjs = fieldnames(erp_data);
        for i_s = 1:length(subjs)
            % get subject id and data
            subj = subjs{i_s};
            if ~strcmp(subj(7:end),batch.method)
                continue
            end
            subj_id = subj(2:end);
            subj_data = erp_data.(subj);
            if contains(batch.method,'trials')
                subj_data = reshape(subj_data,)
            % TODO: rescale data
            
            % get subject group
            s_idx  = strcmp(groups.id,subj_id);
            grp_id = groups.group(s_idx);

%             grp_id = 1;
            if isempty(grp_id) || sum(strcmp(exclude,subj_id)) > 0
                continue
            end
            grp = grp_names{grp_id};
            
            % add subject data to group matrix
            try 
                group_data.(grp).(roi).(erp){end+1} = subj_data;
            catch
                group_data.(grp).(roi).(erp) = {};
                group_data.(grp).(roi).(erp){end+1,1} = subj_data;
            end
        end
    end
end

%% average group entries
% iterate through rois
for i_r = 1:n_rois
    roi = rois{i_r};
    erps = fieldnames(group_data.(grp).(roi));
    n_erps = length(erps);
    % iterate through erp components
    for i_c = 1:n_erps
        erp = erps{i_c};

        % calculate group averages
        for i_g = 1:n_grps
            % get group data
            grp = grp_names{i_g};
            grp_entries = padcat(group_data.(grp).(roi).(erp){:});
            if size(grp_entries,2) > size(grp_entries,1), grp_entries = grp_entries'; end
            
            % remove nan lines
            nan_entries = any(isnan(grp_entries),2);
            grp_entries(nan_entries,:) = [];
           
            % save to output variable and struct
            group_data.(grp).(roi).(erp) = grp_entries;
        end
        data.(roi).(erp).group_average.(method).exclude = exclude;
    end
end

% save struct to server
save(data_path,'data','batch')